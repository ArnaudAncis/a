<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>PVM Assignment</title>
    <%= default_externals %>
    <script src="<%= Settings::SHARED_URL %>/ace/ace.js" type="text/javascript" charset="utf-8"></script>
    <script src="<%= Settings::SHARED_URL %>/source-editor.js" type="text/javascript" charset="utf-8"></script>
    <script src="<%= Settings::SHARED_URL %>/revealer.js" type="text/javascript" charset="utf-8"></script>
    
    <%= Html::Generation::Quiz.setup %>
    <style>
      #colours {
        margin-left: auto;
        margin-right: auto;
        width: 50%;
      }

      #colours td:first-child {
        color: #FFF;
        text-align: center;
      }

      #colours td {
        padding: 5px;
      }

      input {
        width: 100px;
      }

      input.correct {
        background: #AFA;
      }

      input.incorrect {
        background: #FAA
      }

      .solution {
        border: 1px solid black;
        padding: 10px;
        width: 25%;
        margin-left: auto;
        margin-right: auto;
        text-align: center;
      }

      .message {
        font-size: 2em;
        font-weight: bold;
        text-align: center;
        width: 75%;
        margin: 100px auto;
        padding: 20px;
        background: #F44;
        box-shadow: 0px 0px 50px 30px #F44;
      }

      .git {
        border: 1px solid black;
        padding: 10px;
        width: 80%;
        margin: 10px auto;
        text-align: center;
        font-weight: bold;
      }

      .cake {
        border: 1px solid black;
        padding: 10px;
        width: 80%;
        margin: 10px auto;
        font-weight: bold;
        background: #FFAA77;
      }

      .cake .header {
        display: block;
        text-align: center;
        font-size: 2em;
        font-weight: bold;
      }

      .revealer {
        border: 1px solid black;
        padding: 10px;
        width: 25%;
        margin: 10px auto;      
        text-align: center;
        cursor: help;
      }

      .explanation {
        border: 1px solid black;
        padding: 10px;
        width: 75%;
        margin: 10px auto;
      }
    </style>
  </head>

  <body>
    <header>
      <div class="center-vertically">Classes</div>
    </header>
    <div id="contents">
      <div class="message" title="You better be reading this!">
        Update the contents of the local copy of the PVM repo!
        Use <code>git pull</code> to fetch the new material.
      </div>

      <%=
         exercise(Lib::Interpretation) do
           self.source = <<-END
             #include <iostream>

             class Foo
             {
             public:
                 Foo() { std::cout << "D"; }
                 Foo(const Foo&) { std::cout << "C"; }
                 Foo(Foo&&) { std::cout << "M"; }
                 ~Foo() { std::cout << "X"; }
             };

             int main()
             {
                 Foo f;
             }
           END

           <<-END
             <p>What is the output of the following code?</p>
             #{show_source_editor}
             #{if input then show_input else '' end}
             #{show_output_field}
           END
         end
      %>

      <%=
         exercise(Lib::Interpretation) do
           self.source = <<-END
             #include <iostream>

             class Foo
             {
             public:
                 Foo() { std::cout << "D"; }
                 Foo(const Foo&) { std::cout << "C"; }
                 Foo(Foo&&) { std::cout << "M"; }
                 ~Foo() { std::cout << "X"; }
             };

             int main()
             {
                 Foo g;
                 Foo f = g;
             }
           END

           <<-END
             <p>What is the output of the following code?</p>
             #{show_source_editor}
             #{if input then show_input else '' end}
             #{show_output_field}
           END
         end
      %>

      <%=
         exercise(Lib::Interpretation) do
           self.source = <<-END
             #include <iostream>

             class Foo
             {
             public:
                 Foo() { std::cout << "D"; }
                 Foo(const Foo&) { std::cout << "C"; }
                 Foo(Foo&&) { std::cout << "M"; }
                 ~Foo() { std::cout << "X"; }
             };

             int main()
             {
                 Foo* f;
             }
           END

           <<-END
             <p>What is the output of the following code?</p>
             #{show_source_editor}
             #{if input then show_input else '' end}
             #{show_output_field}
           END
         end
      %>

      <%=
         exercise(Lib::Interpretation) do
           self.source = <<-END
             #include <iostream>

             class Foo
             {
             public:
                 Foo() { std::cout << "D"; }
                 Foo(const Foo&) { std::cout << "C"; }
                 Foo(Foo&&) { std::cout << "M"; }
                 ~Foo() { std::cout << "X"; }
             };

             int main()
             {
                 new Foo;
             }
           END

           <<-END
             <p>What is the output of the following code?</p>
             #{show_source_editor}
             #{if input then show_input else '' end}
             #{show_output_field}
           END
         end
      %>



    </div>
  </body>

  <script>
    Quiz.formatQuizzes();
    SourceEditor.initialize();
    Revealer.initialize();
  </script>
</html>
